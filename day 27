import java.util.HashMap;
import java.util.Map;

public class LongestSubstring {
    public static int lengthOfLongestSubstring(String s) {
        int n = s.length();
        int maxLength = 0;
        Map<Character, Integer> lastIndexMap = new HashMap<>();
        
        int start = 0;
        for (int end = 0; end < n; end++) {
            char c = s.charAt(end);
            if (lastIndexMap.containsKey(c) && lastIndexMap.get(c) >= start) {
                start = lastIndexMap.get(c) + 1;
            }
            lastIndexMap.put(c, end);
            maxLength = Math.max(maxLength, end - start + 1);
        }
        
        return maxLength;
    }

    public static void main(String[] args) {
        String s = "abcabcbb";
        System.out.println("Length of the longest substring without repeating characters: " + lengthOfLongestSubstring(s));
    }
}
